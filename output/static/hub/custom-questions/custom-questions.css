/* ==========================================================================
   1. CSS Reset & Base Styles
   ========================================================================== */

*,
*::before,
*::after {
  box-sizing: border-box;
  border-width: 0;
  border-style: solid;
  border-color: #e5e7eb; /* equivalent to Tailwind's border-gray-200 */
}

html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  -moz-tab-size: 4;
  tab-size: 4;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
    "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

body {
  margin: 0;
  line-height: inherit;
}

/* ==========================================================================
   2. Custom Properties & Global Styles
   ========================================================================== */

:root {
  --primary-color: #4f46e5;
  --tw-ring-color: rgba(79, 70, 229, 0.5); /* For focus rings */
}

.font-noto-sans-sc {
  font-family: "Noto Sans SC", sans-serif;
}

body {
  font-family: "Noto Sans SC", sans-serif;
  background-color: #f9fafb; /* bg-gray-50 */
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* ==========================================================================
   3. Custom Component & Form Styles
   ========================================================================== */

/* Custom Color Utilities */
.text-primary {
  color: var(--primary-color);
}
.bg-primary {
  background-color: var(--primary-color);
}
.hover\:bg-primary\/90:hover {
  background-color: rgba(79, 70, 229, 0.9);
}
.focus\:ring-primary\/50:focus {
  --tw-ring-color: rgba(79, 70, 229, 0.5);
}
.border-primary {
  border-color: var(--primary-color);
}
.bg-primary\/10 {
  background-color: rgba(79, 70, 229, 0.1);
}

/* Form Styles (from @tailwindcss/forms) */
.form-input,
.form-textarea,
.form-select,
.form-checkbox {
  border-color: #d1d5db;
  border-width: 1px;
  border-radius: 0.375rem;
  padding: 0.5rem 0.75rem;
  width: 100%;
}
.form-input:focus,
.form-textarea:focus,
.form-select:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 1px var(--primary-color);
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.form-checkbox {
  padding: 0;
  width: 1rem;
  height: 1rem;
  border-radius: 0.25rem;
}
.form-checkbox:checked {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}
.form-select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
  print-color-adjust: exact;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

/* ==========================================================================
   4. Animations & Transitions
   ========================================================================== */

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in {
  animation: fadeIn 0.5s ease-out;
}

.dropdown-menu {
  transition: opacity 0.2s ease, transform 0.2s ease;
}

.notification-enter {
  transform: translate(0, 0);
  opacity: 1;
}

.notification-exit {
  transform: translate(0, 100%);
  opacity: 0;
}

/* ==========================================================================
   5. Utility Classes (Generated from HTML)
   ========================================================================== */

/* Layout & Sizing */
.container {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  padding-right: 1rem;
  padding-left: 1rem;
}
@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}
@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.min-h-screen {
  min-height: 100vh;
}
.w-full {
  width: 100%;
}
.w-4 {
  width: 1rem;
}
.w-48 {
  width: 12rem;
}
.max-w-2xl {
  max-width: 42rem;
}
.flex-grow {
  flex-grow: 1;
}

/* Display & Flexbox */
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.gap-1 {
  gap: 0.25rem;
}
.gap-2 {
  gap: 0.5rem;
}
.gap-3 {
  gap: 0.75rem;
}
.gap-4 {
  gap: 1rem;
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  margin-left: 0.5rem;
}
.space-x-6 > :not([hidden]) ~ :not([hidden]) {
  margin-left: 1.5rem;
}
.space-x-8 > :not([hidden]) ~ :not([hidden]) {
  margin-left: 2rem;
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  margin-top: 0.5rem;
}
.space-y-3 > :not([hidden]) ~ :not([hidden]) {
  margin-top: 0.75rem;
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  margin-top: 1rem;
}
.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  margin-top: 1.5rem;
}
.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  margin-top: 2rem;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

/* Spacing (Margin & Padding) */
.m-1 {
  margin: 0.25rem;
}
.mt-1 {
  margin-top: 0.25rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mb-1 {
  margin-bottom: 0.25rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mb-3 {
  margin-bottom: 0.75rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mb-6 {
  margin-bottom: 1.5rem;
}
.mb-8 {
  margin-bottom: 2rem;
}
.mb-10 {
  margin-bottom: 2.5rem;
}
.mt-16 {
  margin-top: 4rem;
}
.ml-1 {
  margin-left: 0.25rem;
}
.ml-2 {
  margin-left: 0.5rem;
}
.mr-2 {
  margin-right: 0.5rem;
}
.p-2 {
  padding: 0.5rem;
}
.p-4 {
  padding: 1rem;
}
.p-6 {
  padding: 1.5rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}
.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.pb-2 {
  padding-bottom: 0.5rem;
}
.pb-3 {
  padding-bottom: 0.75rem;
}
.px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}
.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.p-1\.5 {
  padding: 0.375rem;
}

/* Typography */
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-\[clamp\(1\.8rem\,4vw\,2\.5rem\)\] {
  font-size: clamp(1.8rem, 4vw, 2.5rem);
}
.font-medium {
  font-weight: 500;
}
.font-bold {
  font-weight: 700;
}
.text-center {
  text-align: center;
}
.text-gray-400 {
  color: #9ca3af;
}
.text-gray-500 {
  color: #6b7280;
}
.text-gray-600 {
  color: #4b5563;
}
.text-gray-700 {
  color: #374151;
}
.text-gray-800 {
  color: #1f2937;
}
.text-white {
  color: #ffffff;
}
.text-red-500 {
  color: #ef4444;
}
.text-red-800 {
  color: #991b1b;
}
.text-green-500 {
  color: #22c55e;
}
.text-transparent {
  color: transparent;
}
.bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.from-primary {
  --tw-gradient-from: var(--primary-color);
  --tw-gradient-stops: var(--tw-gradient-from),
    var(--tw-gradient-to, rgba(79, 70, 229, 0));
}
.to-purple-600 {
  --tw-gradient-to: #9333ea;
}
.bg-clip-text {
  -webkit-background-clip: text;
  background-clip: text;
}
.hover\:text-primary:hover {
  color: var(--primary-color);
}
.hover\:text-white:hover {
  color: #ffffff;
}
.hover\:text-gray-700:hover {
  color: #374151;
}
.hover\:text-red-500:hover {
  color: #ef4444;
}
.hover\:underline:hover {
  text-decoration: underline;
}

/* Backgrounds & Borders */
.bg-white {
  background-color: #ffffff;
}
.bg-white\/90 {
  background-color: rgba(255, 255, 255, 0.9);
}
.bg-gray-100 {
  background-color: #f3f4f6;
}
.bg-gray-800 {
  background-color: #1f2937;
}
.bg-gray-900 {
  background-color: #111827;
}
.bg-red-100 {
  background-color: #fee2e2;
}
.hover\:bg-gray-100:hover {
  background-color: #f3f4f6;
}
.hover\:bg-gray-200:hover {
  background-color: #e5e7eb;
}
.border {
  border-width: 1px;
}
.border-2 {
  border-width: 2px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-t {
  border-top-width: 1px;
}
.border-dashed {
  border-style: dashed;
}
.border-gray-100 {
  border-color: #f3f4f6;
}
.border-gray-200 {
  border-color: #e5e7eb;
}
.border-gray-300 {
  border-color: #d1d5db;
}
.hover\:border-primary:hover {
  border-color: var(--primary-color);
}
.rounded-lg {
  border-radius: 0.5rem;
}
.rounded-xl {
  border-radius: 0.75rem;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded-full {
  border-radius: 9999px;
}

/* Effects & Transitions */
.shadow-sm {
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
}
.shadow-md {
  box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
}
.shadow-lg {
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
}
.shadow-inner {
  box-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 0.05);
}
.backdrop-blur-md {
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-300 {
  transition-duration: 300ms;
}
.transition-colors {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.opacity-0 {
  opacity: 0;
}
.scale-95 {
  transform: scale(0.95);
}
.-translate-x-4 {
  --tw-translate-x: -1rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-y-24 {
  --tw-translate-y: 6rem;
  transform: translate(var(--tw-translate-y), var(--tw-translate-y)) /* ... */;
}

/* Interactivity */
.sticky {
  position: sticky;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.fixed {
  position: fixed;
}
.top-0 {
  top: 0;
}
.top-2 {
  top: 0.5rem;
}
.right-2 {
  right: 0.5rem;
}
.bottom-5 {
  bottom: 1.25rem;
}
.right-5 {
  right: 1.25rem;
}
.top-24 {
  top: 6rem;
}
.left-0 {
  left: 0;
}
.right-0 {
  right: 0;
}
.z-10 {
  z-index: 10;
}
.z-50 {
  z-index: 50;
}
.origin-top-left {
  transform-origin: top left;
}
.origin-top-right {
  transform-origin: top right;
}
.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.focus\:ring-0:focus {
  --tw-ring-shadow: none;
  box-shadow: none;
}
.cursor-pointer {
  cursor: pointer;
}
.self-start {
  align-self: flex-start;
}
.overflow-y-auto {
  overflow-y: auto;
}
button:disabled,
.disabled\:opacity-30:disabled {
  opacity: 0.3;
}

/* Responsive Styles */
@media (min-width: 768px) {
  .md\:hidden {
    display: none;
  }
  .md\:flex {
    display: flex;
  }
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .md\:text-left {
    text-align: left;
  }
  .md\:justify-start {
    justify-content: flex-start;
  }
  .md\:mb-0 {
    margin-bottom: 0;
  }
}

@media (min-width: 1024px) {
  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

/* ==========================================================================
   ADD THESE STYLES TO YOUR custom-questions.css FILE
   ========================================================================== */

/* Makes labels in the preview clickable */
.cursor-pointer {
  cursor: pointer;
}

/* Styles for the "Other" text input in the preview */
.preview-other-input {
  flex-grow: 1;
  max-width: 200px; /* Limits the width of the other input */
  padding: 0.25rem 0.5rem; /* Makes it a bit smaller */
  font-size: 0.875rem; /* Smaller font */
  transition: all 0.2s ease-in-out;
}

/* For smooth showing/hiding transition */
.preview-other-input.hidden {
  opacity: 0;
  width: 0;
  padding: 0;
  margin-left: 0;
  border: none;
}
/* ==========================================================================
   ADD THESE STYLES TO YOUR custom-questions.css FILE
   ========================================================================== */

/* 
  Makes the right preview pane "sticky".
  It will stay in view as the user scrolls the left pane.
*/
#preview-section {
  position: -webkit-sticky; /* For Safari */
  position: sticky;
  top: 6rem; /* Adjust this value based on your header's height + desired margin */
  align-self: start; /* Important for sticky positioning in a flex/grid container */
  max-height: calc(
    100vh - 8rem
  ); /* Prevents the pane from being taller than the screen */
  overflow-y: auto; /* Adds a scrollbar ONLY if the content inside is too tall */
}

/* Makes labels in the preview clickable */
.cursor-pointer {
  cursor: pointer;
}

/* Styles for the "Other" text input in the preview */
.preview-other-input {
  flex-grow: 1;
  max-width: 200px;
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  transition: all 0.2s ease-in-out;
}

/* For smooth showing/hiding transition */
.preview-other-input.hidden {
  opacity: 0;
  width: 0;
  padding: 0;
  margin-left: 0;
  border: none;
}
/* ==========================================================================
   ENHANCEMENTS FOR ROBUSTNESS & UX
   ========================================================================== */

/* 
  ENHANCEMENT: Add a red border to invalid (empty) required fields
  to provide immediate visual feedback to the user.
*/
.form-input.border-red-500,
.form-textarea.border-red-500 {
  border-color: #ef4444; /* red-500 */
  --tw-ring-color: #ef4444;
}

/* 
  ENHANCEMENT: Make the delete animation smoother by transitioning max-height.
  This prevents the layout from snapping abruptly when an item is removed.
*/
.question-card,
.section-card,
.option-item {
  transition: opacity 0.3s ease, transform 0.3s ease, max-height 0.3s ease;
  overflow: hidden;
}

/* 
  ENHANCEMENT: Add accessibility attribute to notification container in HTML.
  This allows screen readers to announce messages.
  Find this div in your HTML:
  <div id="notification" ...>
  And add this attribute:
  aria-live="polite"
*/
